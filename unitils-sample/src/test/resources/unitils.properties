
# Name or path of the project specific properties file. The system will try to find this file in the classpath (recommended),
# the user home folder or the local filesystem
unitils.configuration.customFileName=unitils.properties
unitils.configuration.localFileName=unitils-local.properties

### DatabaseModule configuration ###
# Default behavior concerning execution of tests in a transaction. Supported values are 'disabled', 'commit' and 'rollback'.
# If set to disabled, test are not executed in a transaction by default. If set to commit, each test is run in a transaction,
# which is committed. If set to rollback, each test is run in a transaction, which is rolled back.
DatabaseModule.Transactional.value.default=rollback

# 支持多数据源配置
database.names=database1, database2
database.userName.database1=sa
database.userName.database2=sa
database.password.database1=
database.password.database2=
database.schemaNames=public
database.driverClassName.database1=org.hsqldb.jdbcDriver
database.driverClassName.database2=org.h2.Driver
database.url.database1=jdbc:hsqldb:mem:unitils1
database.url.database2=jdbc:h2:~/test
database.dialect.database1=hsqldb
database.dialect.database2=h2
database.dbMaintain.enabled=true

# 是否从脚本自动创建数据库，默认false
dbMaintainer.autoCreateExecutedScriptsTable=true
# 是否重新创建数据库对象，可以结合dbMaintainer.preserve.{schemas|tables|views|materializedViews|synonyms|sequences}=xx,xx 保留某些对象不更新
dbMaintainer.fromScratch.enabled=true
# 数据库脚本保存路径，路径可以是目录和jar文件，多个以逗号分割
dbMaintainer.script.locations=src/test/resources/dbscripts/
# 数据库脚本后缀
dbMaintainer.script.fileExtensions=sql,ddl
#指定时间格式
#dbMaintainer.timestampFormat=yyyy-MM-dd HH:mm:ss
# 如果设置为true，每次执行单元测试都会更新schema
updateDataBaseSchema.enabled=false
# If set to true an XSD or DTD will be generated that represents the structure of the database schema. This XSD or DTD can be
# used in datafiles to verify if they are up-to-date and to enable code completion.
dbMaintainer.generateDataSetStructure.enabled=false

# If set to true, the datasource injected onto test fields annotated with @TestDataSource or retrieved using
# DatabaseUnitils#getTransactionalDataSource are wrapped in a transactional proxy
dataSource.wrapInTransactionalProxy=true

# Default operation that is used for getting a dbunit dataset into the database. Should be the fully qualified classname
# of an implementation of org.unitils.dbunit.datasetloadstrategy.DataSetLoadStrategy
DbUnitModule.DataSet.loadStrategy.default=org.unitils.dbunit.datasetloadstrategy.impl.CleanInsertLoadStrategy
# Default factory that is used to create a dataset object from a file for the @DataSet annotation
DbUnitModule.DataSet.factory.default=org.unitils.dbunit.datasetfactory.impl.MultiSchemaXlsDataSetFactory
# Default factory that is used to create a dataset object from a file for the @ExpectedDataSet annotation
DbUnitModule.ExpectedDataSet.factory.default=org.unitils.dbunit.datasetfactory.impl.MultiSchemaXlsDataSetFactory
